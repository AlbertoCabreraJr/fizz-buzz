AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: >
  fizz-buzz-lambda

  Sample SAM Template for fizz-buzz-lambda

# More info about Globals: https://github.com/awslabs/serverless-application-model/blob/master/docs/globals.rst
Globals:
  Function:
    Timeout: 3
    MemorySize: 128

Resources:
  FizzBuzzFunction:
    Type: AWS::Serverless::Function # More info about Function Resource: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#awsserverlessfunction
    Properties:
      CodeUri: fizz-buzz/
      Handler: app.lambdaHandler
      Runtime: nodejs14.x
      Architectures:
        - x86_64
      Events:
        FizzBuzz:
          Type: Api # More info about API Event Source: https://github.com/awslabs/serverless-application-model/blob/master/versions/2016-10-31.md#api
          Properties:
            Path: /fizz-buzz
            Method: get
    Metadata: # Manage esbuild properties
      BuildMethod: esbuild
      BuildProperties:
        Minify: true
        Target: 'es2020'
        # Sourcemap: true # Enabling source maps will create the required NODE_OPTIONS environment variables on your lambda function during sam build
        EntryPoints:
          - app.ts
  FizzBuzzApi:
    Type: AWS::Serverless::HttpApi
    Properties:
      DefinitionBody:
        openapi: 3.0.1
        info:
          title: FizzBuzz API
        paths:
          /fizzbuzz:
            get:
              x-amazon-apigateway-integration:
                httpMethod: POST
                type: aws_proxy
                uri:
                  Fn::Sub: arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${FizzBuzzFunctionRole.Arn}/invocations
              responses: {}

Outputs:
  FizzBuzzFunction:
    Description: 'FizzBuzz Lambda Function ARN'
    Value: !GetAtt FizzBuzzFunction.Arn
  FizzBuzzFunctionIamRole:
    Description: 'Implicit IAM Role created for FizzBuzz function'
    Value: !GetAtt FizzBuzzFunctionRole.Arn
